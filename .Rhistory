theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos confirmados = ", dim(confirmados)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",
if_else(local_internamento == "HR", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL PELOPIDAS SILVEIRA",  "HOSPITAL PELÓPIDAS SILVEIRA",as.character(local_internamento)))))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
hosp1$Var1
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y")),
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 14, height = 10, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# UTI
hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
table(hospital2$local_internamento)
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", as.character(local_internamento))))
table(hospital2$local_internamento2)
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y")),
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 8, height = 7, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), size = 3, color = "black") +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
# jpeg(paste(path, "municipio_casos.jpg", sep = ""),
#      width = 12, height = 6, units = 'in', res = 300)
# plot_municipio + coord_flip() + theme(legend.position = "none")
# dev.off()
confirmados$idade = as.numeric(confirmados$idade)
head(confirmados$idade)
summary(confirmados$idade)
sd(confirmados$idade, na.rm = TRUE)
# Change line color and fill color
# histograma =ggplot(confirmados, aes(x=idade))+
#   geom_histogram(color="black", fill="deepskyblue",
#                  breaks=seq(0, 100, by=10), alpha = 0.5) +
#   ggtitle("Faixa etária para os casos confirmados de COVID-19 em PE") +
#   xlab("Idade") + ylab("Frequência") +
#   labs(caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco. Dados até",
#                        format(as.Date(today()-1), "%d/%m/%Y")))+
#   scale_x_continuous(breaks = seq(0, 100, by = 10)) +
#   scale_y_continuous(breaks = seq(0, 500, 25))
# histograma
# jpeg(paste(path, "histograma_idade.jpg", sep = ""),
#      width = 6, height = 4, units = 'in', res = 300)
# histograma
# dev.off()
class(confirmados$idade)
confirmados = confirmados %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
head(select(confirmados, idade, idade_cat))
evolucao
evolucao2 <- evolucao[-1, ]
evolucao2
evolucao2 <- evolucao[-1, ]
evolucao2
plot_evolucao = ggplot(evolucao2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = "Casos confirmados",
subtitle = "Evolução") +
xlab("") + ylab("Frequência")
plot_evolucao + coord_flip() + theme(legend.position = "none")
# Gráfico de pizza
bp_evolucao <- ggplot(evolucao, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(width = 1, stat = "identity", color = "white")
bp_evolucao
# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Gráfico de pizza
bp_evolucao <- ggplot(evolucao2, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(width = 1, stat = "identity", color = "white")
bp_evolucao
# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3.3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos confirmados de COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos confirmados = ", dim(confirmados)[1]))
evolucao_pie
# Gráfico de pizza
bp_evolucao <- ggplot(evolucao2, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(width = 1, stat = "identity", color = "white")
bp_evolucao
# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao2
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3.3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos confirmados de COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos confirmados = ", dim(confirmados)[1]))
evolucao_pie
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos confirmados de COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos confirmados = ", dim(confirmados)[1]))
evolucao_pie
jpeg(paste(path, "evolucao_pie_pe.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
evolucao_pie
dev.off()
sexo = as.data.frame(table(confirmados$sexo))
sexo
names(sexo) <- c("Sexo", "value")
#View(sexo)
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos confirmados = ", dim(confirmados)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",
if_else(local_internamento == "HR", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL PELOPIDAS SILVEIRA",  "HOSPITAL PELÓPIDAS SILVEIRA",as.character(local_internamento)))))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
hosp1$Var1
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y")),
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 14, height = 10, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# UTI
hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
table(hospital2$local_internamento)
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", as.character(local_internamento))))
table(hospital2$local_internamento2)
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y")),
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 8, height = 7, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), size = 3, color = "black") +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
confirmados$idade = as.numeric(confirmados$idade)
head(confirmados$idade)
summary(confirmados$idade)
sd(confirmados$idade, na.rm = TRUE)
class(confirmados$idade)
confirmados = confirmados %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
head(select(confirmados, idade, idade_cat))
head(select(confirmados, idade, idade_cat))
View(confirmados)
class(confirmados$idade)
confirmados = confirmados %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
head(select(confirmados, idade, idade_cat))
idadeCategoria = as.data.frame(table(confirmados$idade_cat))
idadeCategoria
plot_idadecat = ggplot(idadeCategoria, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "blue",
alpha = 0.75) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos confirmados de COVID-19\nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência")
plot_idadecat
jpeg(paste(path, "barra_idade.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecat
dev.off()
df_obito <- confirmados %>%
filter(evolucao == "ÓBITO")
dim(df_obito)[1]
paste("letalidade = ", round(100*dim(df_obito)[1]/dim(confirmados)[1],2), "%", sep = "")
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
summary(df_obito$idade)
sd(df_obito$idade)
idadeobito <- as.data.frame(table(df_obito$idade_cat))
plot_idadecatobito = ggplot(idadeobito, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "darkred",
alpha = 0.75) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos óbitos de COVID-19\nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
theme_bw() +
xlab("") + ylab("Frequência")
plot_idadecatobito
jpeg(paste(path, "barra_idadeobito.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatobito
dev.off()
df_obito = df_obito %>% mutate(idosos = if_else(idade >= 60, "Idoso", "Não Idoso"))
props = as.data.frame(table(df_obito$idosos)) %>%
mutate(prop = round(100*Freq/sum(Freq), 2))
props
residencia = as.data.frame(table(df_obito$municipio)) %>%
mutate(prop = round(100*Freq/sum(Freq),2))
residencia %>% arrange(desc(Freq))
write.csv(residencia, paste(path, "obito_residencia_pe.csv"))
round(sum(residencia$prop),1)
head(confirmados)
names(confirmados)
confirmados2 <- confirmados %>%
select(municipio, geres)
library(dplyr)
confirmados2 <- confirmados %>%
select(municipio, geres)
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(dplyr)
confirmados2 <- confirmados %>%
select(municipio, geres)
confirmados2 <- select(confirmados, municipio, geres)
confirmados2 <- select(confirmados, municipio, geres)
confirmados2 <- select(confirmados, municipio, geres)
table(confirmados2$geres)
df_sintomas <- as.data.frame(table(confirmados$data_dos_primeiros_sintomas))
names(df_sintomas) <- c("data", "casos")
sum(df_sintomas$casos)
df_sintomas
class(df_sintomas$data)
df_sintomas$data = as.character.factor(df_sintomas$data)
df_sintomas$data = as.Date(df_sintomas$data, format = "%d/%m/%Y")
class(df_sintomas$data)
class(df_sintomas$data)
df_sintomas <- df_sintomas %>% filter(data <= as.Date(today()))
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos), by =10))
plot_newcases
jpeg(paste(path, "histograma_casos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newcases
dev.off()
# head(df_obito)
library(readr)
library(ggplot2)
library(dplyr)
library(lubridate)
library(reshape2)
path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 18-04-2020/"
Cov_C <- read_csv("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-cities.csv",
col_types = cols(country = col_skip()))
#View(Cov_C)
Cov_D <- read_csv("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-states.csv",
col_types = cols(city = col_skip(), country = col_skip()))
#View(Cov_D)
Cov_E <- read_csv("https://raw.githubusercontent.com/wcota/covid19br/master/cases-brazil-total.csv",
col_types = cols(URL = col_skip(), country = col_skip()))
df <- Cov_D
pe <- filter(df, state == "PE")
# Gráfico
p <- ggplot(pe, aes(x = date, y = totalCases, group = state)) +
geom_line(aes(color = state), size = 1) +
scale_color_manual(values = c("#cc3300")) +
geom_point(aes(color = state), size = 1) + theme_light() + theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Casos confirmados COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-12", today()))) +
xlab("Data de notificação") +
theme(legend.title = element_blank(),
legend.position = "bottom")
p
class(pe$deaths)
pe_mod <- select(pe, date, deaths, totalCases)
