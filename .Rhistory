# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos SRAG confirmados para COVID-19 \nem PE até",
format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos SRAG confirmados = ", dim(confirmados_srag)[1]))
evolucao_pie
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos SRAG confirmados para COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos SRAG confirmados = ", dim(confirmados_srag)[1]))
evolucao_pie
jpeg(paste(path, "evolucao_pie_pe.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
evolucao_pie
dev.off()
sexo = as.data.frame(table(confirmados_srag$sexo))
sexo
sexoleve = as.data.frame(table(confirmados_leves$sexo))
sexoleve
names(sexo) <- c("Sexo", "value")
#View(sexo)
names(sexoleve) <- c("Sexo", "value")
#View(sexo)
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos SRAG confirmados = ", dim(confirmados_srag)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de COVID-19 \nem PE até", format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos SRAG confirmados = ", dim(confirmados_srag)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de SRAG para\n COVID-19 em PE até", format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos SRAG confirmados = ", dim(confirmados_srag)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
# Gráfico de pizza
sexo_bpleve <- ggplot(sexoleve, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bpleve
# Pie chart
pie_sexoleve <- sexo_bpleve + coord_polar("y", start=0)
pie_sexoleve
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexoleve = pie_sexoleve +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexoleve
# Compute the position of labels
data = sexoleve
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados leves de \nCOVID-19 em PE até", format(as.Date(today()-1), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos leves confirmados = ", dim(confirmados_leves)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
jpeg(paste(path, "sexo_pe_leve.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",
if_else(local_internamento == "HR", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL PELOPIDAS SILVEIRA",  "HOSPITAL PELÓPIDAS SILVEIRA",as.character(local_internamento)))))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
hosp1$Var1
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até", format(as.Date(today()-1), "%d/%m/%Y")),
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 15, height = 10, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# UTI
hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
as.data.frame(table(hospital2$local_internamento))
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", if_else(local_internamento == "HOSPITAL AGAMENON MAGALHAES" | local_internamento == "HOSPITAL AGAMENON MAGALHAES - RECIFE", "HOSPITAL AGAMENON MAGALHÃES", if_else(local_internamento == "HOSPITAL DA MULHER DE RECIFE" | local_internamento == "HOSPITAL DA MULHER DO RECIFE", "HOSPITAL DA MULHER", if_else(local_internamento == "HOSPITAL DOM HELDER" | local_internamento == "HOSPITAL DOM HÉLDER", "HOSPITAL DOM HELDER CAMARA", if_else(local_internamento == "HOSPITAL ESPERANCA", "HOSPITAL ESPERANÇA", if_else(local_internamento == "HOSPITAL OTAVIO DE FREITAS", "HOSPITAL OTÁVIO DE FREITAS", if_else(local_internamento == "HOSPITAL SAO MARCOS", "HOSPITAL SÃO MARCOS")))))))))
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", if_else(local_internamento == "HOSPITAL AGAMENON MAGALHAES" | local_internamento == "HOSPITAL AGAMENON MAGALHAES - RECIFE", "HOSPITAL AGAMENON MAGALHÃES", if_else(local_internamento == "HOSPITAL DA MULHER DE RECIFE" | local_internamento == "HOSPITAL DA MULHER DO RECIFE", "HOSPITAL DA MULHER", if_else(local_internamento == "HOSPITAL DOM HELDER" | local_internamento == "HOSPITAL DOM HÉLDER", "HOSPITAL DOM HELDER CAMARA", if_else(local_internamento == "HOSPITAL ESPERANCA", "HOSPITAL ESPERANÇA", if_else(local_internamento == "HOSPITAL OTAVIO DE FREITAS", "HOSPITAL OTÁVIO DE FREITAS", if_else(local_internamento == "HOSPITAL SAO MARCOS", "HOSPITAL SÃO MARCOS", local_internamento)))))))))
Hospitais_df = as.data.frame(table(hospital2$local_internamento2))
write.csv(Hospitais_df, paste(path, "hospitais_covid19_PE.csv"))
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 8, height = 7, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
confirmados_srag$idade = as.numeric(confirmados_srag$idade)
head(confirmados_srag$idade)
summary(confirmados_srag$idade)
sd(confirmados_srag$idade, na.rm = TRUE)
class(confirmados_srag$idade)
confirmados_srag = confirmados_srag %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
#casos leves
confirmados_leves$idade = as.numeric(confirmados_leves$idade)
class(confirmados_leves$idade)
confirmados_leves = confirmados_leves %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
idadeCategorialeve = as.data.frame(table(confirmados_leves$idade_cat))
idadeCategorialeve
plot_idadecatleve = ggplot(idadeCategorialeve, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "orange",
alpha = 0.85) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos leves confirmados SRAG para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência")
plot_idadecatleve
jpeg(paste(path, "barra_idade_leve.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatleve
dev.off()
head(select(confirmados_srag, idade, idade_cat))
tail(select(confirmados_srag, idade, idade_cat))
idadeCategoria = as.data.frame(table(confirmados_srag$idade_cat))
idadeCategoria
plot_idadecat = ggplot(idadeCategoria, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "blue",
alpha = 0.75) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos confirmados SRAG para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência")
plot_idadecat
jpeg(paste(path, "barra_idade.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecat
dev.off()
df_obito <- confirmados_srag %>%
filter(evolucao == "ÓBITO")
dim(df_obito)[1]
paste("letalidade = ", round(100*dim(df_obito)[1]/dim(confirmados)[1],2), "%", sep = "")
paste("letalidade = ", round(100*dim(df_obito)[1]/dim(confirmados_srag)[1],2), "%", sep = "")
paste("letalidade = ", round(100*dim(df_obito)[1]/(dim(confirmados_srag)[1]+dim(confirmados_leves)[1]),2), "%", sep = "")
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
summary(df_obito$idade)
sd(df_obito$idade)
idadeobito <- as.data.frame(table(df_obito$idade_cat))
plot_idadecatobito = ggplot(idadeobito, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "darkred",
alpha = 0.75) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos óbitos SRAG confirmados para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_bw() +
xlab("") + ylab("Frequência")
plot_idadecatobito
jpeg(paste(path, "barra_idadeobito.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatobito
dev.off()
head(confirmados)
head(confirmados_srag)
df_sintomas <- as.data.frame(table(confirmados_srag$data_dos_primeiros_sintomas))
names(df_sintomas) <- c("data", "casos")
sum(df_sintomas$casos)
df_sintomas
class(df_sintomas$data)
df_sintomas$data = as.character.factor(df_sintomas$data)
df_sintomas$data = as.Date(df_sintomas$data, format = "%d/%m/%Y")
class(df_sintomas$data)
class(df_sintomas$data)
df_sintomas <- df_sintomas %>% filter(data <= as.Date(today()))
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()-1), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos), by =10))
plot_newcases
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()-2), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos), by =10))
plot_newcases
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()-1), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos), by =10))
plot_newcases
jpeg(paste(path, "histograma_casos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newcases
dev.off()
# Title     : Genomika
# Objective : Get API data
# Created by: ASRF
# Created on: 17/04/2020
library(httr)
library(jsonlite)
library(dplyr)
library(lubridate)
req <- httr::GET(
url = "https://resultados.genomika.com.br/api/v2/covid-results/",
add_headers("Content-Type" = "application/json",
"Authorization" = "Token f2f2d2e0024427241194f51481a1927a9b604ea3")
)
data <- jsonlite::fromJSON(rawToChar(req$content))
write.csv(data, "genomika.csv", row.names = TRUE)
# Sumário
names(data)
head(data$resultado)
resultado <- as.data.frame(table(data$resultado))
resultado <- resultado %>% mutate(prop = round(100*Freq/sum(Freq), 1))
resultado
names(resultado)[1] <- "Resultado"
# Gráfico para resultado
# Gráfico de pizza
resultado_bp <- ggplot(resultado, aes(x = "", y = Freq, fill = Resultado)) +
geom_bar(width = 1, stat = "identity", color = "white")
#resultado_bp
# Pie chart
pie_resultado <- resultado_bp + coord_polar("y", start=0)
pie_resultado
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_resultado= pie_resultado +  blank_theme +
theme(axis.text.x=element_blank())
pie_resultado
# Compute the position of labels
data = resultado
View(data)
data <- data %>%
arrange(desc(Resultado)) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
head(data)
data = data[-2,]
# Basic piechart
resultado_pie <- ggplot(data, aes(x="", y=prop, fill=Resultado)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(Freq, "(", prop, "%", ")", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1")
resultado_pie = resultado_pie +
ggtitle("Resultados dos testes COVID-19 em PE\nGenomika") +
labs(caption = paste("IRRD/PE. Dados atualizados em", format(as.Date(today()-1), "%d/%m/%Y"))) +
theme(legend.title = element_blank())
resultado_pie
# Salvando em jpg
path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 26-04-2020/"
jpeg(paste(path, "genomika_dados.jpg", sep = ""),
width = 5, height = 4, units = 'in', res = 300)
resultado_pie
dev.off()
