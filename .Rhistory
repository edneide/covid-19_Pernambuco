library(ggrepel)
#library(hrbrthemes)
plot_casesDeaths <- ggplot(pe_mod, aes(x = date, y = value, colour = variable)) +
geom_line() + geom_point(size = 2) +
#geom_point(position = "dodge", size = 1, color = "black")+
scale_color_manual(values=c("blue", "red")) +
theme_light()
# geom_text(aes(label = value), colour = "black", hjust = 0.6, vjust = -.9, size = 2, angle = 45, parse = TRUE)
#geom_label_repel(aes(label = value),
#  box.padding   = 0.35,
# point.padding = 0.5,
#  segment.color = 'grey50', size = 2) #+
#geom_text(aes(label = value), colour = "black", size = 3,
#  position = position_dodge(0.9))
plot_mortes_casos = plot_casesDeaths +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Casos confirmados \ne óbitos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: https://covid.saude.gov.br/.\n Dados atualizados em ", format(as.Date(today()-1), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", today()))) +
xlab("Data de notificação a partir da 1ª morte") + ylab("Quantidade de ocorrências") +
theme(legend.title = element_blank(),
legend.position = "bottom")
plot_mortes_casos +
geom_label_repel(label = labels) +
guides(fill = guide_legend(override.aes = list(shape = 22)))
plot_mortes_casos +
geom_label_repel(label = labels, show.legend = F)
# Escala linear
plot1 <- plot_mortes_casos +
scale_y_continuous(breaks = seq(0, max(pe_mod$value, na.rm = TRUE), 1000)) +
ylab("Quantidade de ocorrências\n(escala linear)")
# Escala log
plot2 <- plot_mortes_casos +
scale_y_continuous(trans = 'log10') +
ylab("Quantidade de ocorrências\n(escala log)")
library(gridExtra)
# plot1 <- plot_casos_PE + scale_y_continuous(breaks = seq(0,max(pe$totalCases),500)) +
#   ylab("Total de casos confirmados\n(escala linear)")
#
# plot2 <- plot_casos_PE + scale_y_continuous(trans = 'log10') +
#   ylab("Total de casos confirmados\n(escala log)")
plot_casos_deaths_PE = grid.arrange(plot1, plot2, ncol = 2)
plot_mortes_casos = plot_mortes_casos +
geom_label_repel(label = labels, show.legend = F)
# Escala linear
plot1 <- plot_mortes_casos +
scale_y_continuous(breaks = seq(0, max(pe_mod$value, na.rm = TRUE), 1000)) +
ylab("Quantidade de ocorrências\n(escala linear)")
# Escala log
plot2 <- plot_mortes_casos +
scale_y_continuous(trans = 'log10') +
ylab("Quantidade de ocorrências\n(escala log)")
library(gridExtra)
# plot1 <- plot_casos_PE + scale_y_continuous(breaks = seq(0,max(pe$totalCases),500)) +
#   ylab("Total de casos confirmados\n(escala linear)")
#
# plot2 <- plot_casos_PE + scale_y_continuous(trans = 'log10') +
#   ylab("Total de casos confirmados\n(escala log)")
plot_casos_deaths_PE = grid.arrange(plot1, plot2, ncol = 2)
#save
g <- arrangeGrob(plot1, plot2, ncol=2) #generates g
ggsave(file= paste(path, "covid-19_pernambuco_confirmados_mortes.jpg"), g,
dpi = 300, width = 14, height = 7, units = 'in') #saves g
plot_casos_mortesBR <- ggplot(brasil_mod,
aes(x = date,
y = value,
colour = var)) +
geom_line() +
geom_point() +
scale_color_manual(values=c("blue", "darkred")) +
theme_light() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Casos confirmados \ne óbitos COVID-19",
subtitle = "Brasil",
caption = paste("IRRD/PE. Fonte: https://covid.saude.gov.br/.\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", today()))) +
xlab("Data da notificação") +
theme(legend.title = element_blank(),
legend.position = "bottom")
# Escala linear
plotBR1 <- plot_casos_mortesBR +
ylab("Quantidade de ocorrências\n(escala linear)")
plotBR2 <- plot_casos_mortesBR +
scale_y_continuous(trans = 'log10') +
ylab("Quantidade de ocorrências\n(escala log)")
plotBR1
# Adicionando etiqueta
# Criando as etiquetas
indices_casos = which(brasil_mod$variable == "casos")
indices_casos
View(brasil_mod)
# Adicionando etiqueta
# Criando as etiquetas
indices_casos = which(brasil_mod$var == "casos")
indices_casos
# Adicionando etiqueta
# Criando as etiquetas
indices_casos = which(brasil_mod$var == "casos")
indices_obitos = which(brasil_mod$var == "óbitos")
# Últimos índices
ultimo_caso = indices_casos[length(indices_casos)]
ultimo_obito = indices_obitos[length(indices_obitos)]
# Criando a variavel
labels <- c(rep(NA, length(indices_casos)-1), brasil_mod$var[ultimo_caso],
rep(NA, length(indices_obitos)-1), brasil_mod$var[ultimo_obito])
brasil_mod$labels = labels
# Adicionando etiqueta
# Criando as etiquetas
indices_casos = which(brasil_mod$var == "casos")
indices_obitos = which(brasil_mod$var == "óbitos")
# Últimos índices
ultimo_caso = indices_casos[length(indices_casos)]
ultimo_obito = indices_obitos[length(indices_obitos)]
# Criando a variavel
labels <- c(rep(NA, length(indices_casos)-1), brasil_mod$value[ultimo_caso],
rep(NA, length(indices_obitos)-1), brasil_mod$value[ultimo_obito])
brasil_mod$labels = labels
plot_casos_mortesBR = plot_casos_mortesBR +
geom_label_repel(label = labels, show.legend = F)
plot_casos_mortesBR
plot_casos_mortesBR <- ggplot(brasil_mod,
aes(x = date,
y = value,
colour = var)) +
geom_line() +
geom_point() +
scale_color_manual(values=c("blue", "darkred")) +
theme_light() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Casos confirmados \ne óbitos COVID-19",
subtitle = "Brasil",
caption = paste("IRRD/PE. Fonte: https://covid.saude.gov.br/.\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", today()))) +
xlab("Data da notificação") +
theme(legend.title = element_blank(),
legend.position = "bottom")
plot_casos_mortesBR = plot_casos_mortesBR +
geom_label_repel(label = labels, show.legend = F)
# Escala linear
plotBR1 <- plot_casos_mortesBR +
ylab("Quantidade de ocorrências\n(escala linear)")
plotBR2 <- plot_casos_mortesBR +
scale_y_continuous(trans = 'log10') +
ylab("Quantidade de ocorrências\n(escala log)")
#save
plotBR_casos_obitos  <- arrangeGrob(plotBR1, plotBR2, ncol=2) #generates g
ggsave(file= paste(path, "covid-19_brasil_casos_obitos.jpg"), plotBR_casos_obitos,
dpi = 300, width = 12, height = 5, units = 'in') #saves g
plot_casos_mortesBR <- ggplot(brasil_mod,
aes(x = date,
y = value,
colour = var)) +
geom_line() +
geom_point() +
scale_color_manual(values=c("blue", "darkred")) +
theme_light() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Casos confirmados \ne óbitos COVID-19",
subtitle = "Brasil",
caption = paste("IRRD/PE. Fonte: https://covid.saude.gov.br/.\n Dados atualizados em ", format(as.Date(today()-1), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", today()))) +
xlab("Data da notificação") +
theme(legend.title = element_blank(),
legend.position = "bottom")
plot_casos_mortesBR = plot_casos_mortesBR +
geom_label_repel(label = labels, show.legend = F)
# Escala linear
plotBR1 <- plot_casos_mortesBR +
ylab("Quantidade de ocorrências\n(escala linear)")
plotBR2 <- plot_casos_mortesBR +
scale_y_continuous(trans = 'log10') +
ylab("Quantidade de ocorrências\n(escala log)")
#save
plotBR_casos_obitos  <- arrangeGrob(plotBR1, plotBR2, ncol=2) #generates g
ggsave(file= paste(path, "covid-19_brasil_casos_obitos.jpg"), plotBR_casos_obitos,
dpi = 300, width = 12, height = 5, units = 'in') #saves g
rm(list=ls())
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
library(readr)
path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 05-05-2020/"
pe_municipios <- read.csv('https://raw.githubusercontent.com/edneide/covid-19_Pernambuco/master/covid-19_Pernambuco.csv')
library(janitor)
df = clean_names(pe_municipios)
names(df)
class(df$classificacao_final)
# Convertendo em character
df <- data.frame(lapply(df, as.character), stringsAsFactors=FALSE)
# Checando a classe
class(df$classificacao_final)
clasificacao = as.data.frame(table(df$classificacao_final))
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_class = ggplot(clasificacao, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Classificação final dos casos notificados de COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_bw() +
xlab("") + ylab("Frequência")
plot_class = plot_class + coord_flip() + theme(legend.position = "none") +
annotate(geom="text", x=4, y=1500, label=paste("N* = ", dim(df)[1], sep = ""),
color="black") + labs(caption = "*Número total de notificados.")
plot_class
jpeg(paste(path, "classificacao_pe.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_class
dev.off()
cenarios_pe = as.data.frame(table(df$classificacao_final))
cenarios_pe
table(df$srag)
confirmados_srag = df %>%
filter(classificacao_final == "CONFIRMADO", srag == "SIM")
dim(confirmados_srag)
confirmados_leves = df %>%
filter(classificacao_final == "CONFIRMADO", srag == "NÃO")
dim(confirmados_leves)
evolucao = as.data.frame(table(confirmados_srag$evolucao))
evolucao
plot_evolucao = ggplot(evolucao, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black") +
labs(title = "Casos confirmados",
subtitle = "Evolução") +
xlab("") + ylab("Frequência")
plot_evolucao + coord_flip() + theme(legend.position = "none")
# jpeg(paste(path, "evolucao_pe.jpg", sep = ""),
#      width = 5, height = 4, units = 'in', res = 300)
# plot_evolucao + coord_flip() + theme(legend.position = "none")
# dev.off()
# Gráfico de pizza
bp_evolucao <- ggplot(evolucao, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(width = 1, stat = "identity", color = "white")
bp_evolucao
# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos SRAG confirmados para COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos SRAG confirmados = ", dim(confirmados_srag)[1]))
evolucao_pie
jpeg(paste(path, "evolucao_pie_pe.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
evolucao_pie
dev.off()
sexo = as.data.frame(table(confirmados_srag$sexo))
sexo
sexoleve = as.data.frame(table(confirmados_leves$sexo))
sexoleve
names(sexo) <- c("Sexo", "value")
#View(sexo)
names(sexoleve) <- c("Sexo", "value")
#View(sexo)
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados de SRAG para\n COVID-19 em PE até", format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos SRAG confirmados = ", dim(confirmados_srag)[1])) +
theme(legend.title = element_blank())
sexo_pizza
# Salvando em jpg
#jpeg(paste(path, "sexo_pe.jpg", sep = ""),
#     width = 4, height = 4, units = 'in', res = 300)
#dev.off()
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
# Gráfico de pizza
sexo_bpleve <- ggplot(sexoleve, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bpleve
# Pie chart
pie_sexoleve <- sexo_bpleve + coord_polar("y", start=0)
pie_sexoleve
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexoleve = pie_sexoleve +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexoleve
# Compute the position of labels
data = sexoleve
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados leves de \nCOVID-19 em PE até", format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos leves confirmados = ", dim(confirmados_leves)[1])) +
theme(legend.title = element_blank())
sexo_pizza
#Salvando
jpeg(paste(path, "sexo_pe_leve.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS" | local_internamento == "HOSPITAL PORTUGUES" | local_internamento == "HOSPITAL PORTUGUÊS" , "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",
if_else(local_internamento == "HR" | local_internamento=="HOSPITAL DA RESTAURA"| local_internamento == "HOSPITAL DA RESTAURACAO"| local_internamento == "HOSPITAL DA RESTAURAÇAO", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL PELOPIDAS SILVEIRA",  "HOSPITAL PELÓPIDAS SILVEIRA", if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR 2" | local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR2" |             local_internamento == "HOSPITAL DE CAMPANHA COVID-19 HPR2" | local_internamento == "HOSPITAL DE CAMPANHA  COVID 19 HPR2" | local_internamento == "HOSPITAL DE CAMPANHA COVID19 HPR 2&NBSP;", "HOSPITAL DE CAMPANHA COVID-19 HPR2", if_else(local_internamento == "HOSPITAL AGAMENOM MAGALHÃES" | local_internamento=="HOSPITAL AGAMENOM MAGALHAES" | local_internamento == "HOSPITAL AGAMENON MAGALHAES", "HOSPITAL AGAMENON MAGALHÃES", if_else(local_internamento == "HOSPITAL ALFA - BOA VIAGEM", "HOSPITAL ALFA BOA VIAGEM", if_else(local_internamento == "POLICLÍNICA E MATERNIDADE PROFESSOR BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA", if_else(local_internamento=="HMR - ENFERMARIA CLINICA", "HMR", if_else(local_internamento == "HOSPITAL DOM HELDER",                       "HOSPITAL DOM HÉLDER", if_else(local_internamento == "HOSPITAL NOSSA SENHORA DO O - JANGA PAULISTA"| local_internamento ==  "HOSPITAL E MATERNIDADE NOSSA SENHORA DO O", "HOSPITAL NOSSA SENHORA DO Ó", if_else(local_internamento %in% c("MATERNIDADE BARROS LIMA", "POLICLINICA BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA", "POLICLINICA E MATERNIDADE PROFESSOR BARROS LIMA", "MATERNIDADE BARROS LIMA"), "POLICLINICA BARROS LIMA", if_else(local_internamento == "HOSPITAL DA MULHER DE RECIFE", "HOSPITAL DA MULHER DO RECIFE", if_else(local_internamento == "HOSPITAL SANTA TERESINHA", "HOSPITAL SANTA TEREZINHA", if_else(local_internamento == "POLICLINICA AMAURY  COUTINHO",              "POLICLINICA AMAURY COUTINHO", as.character(local_internamento))))))))))))))))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
unique(hosp1$Var1)
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até", format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
hosp1 <- hosp1[-1,]
hosp1
write.csv(hosp1, paste(path, "hospitais_leito.csv"))
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 17, height = 10, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# UTI
hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
as.data.frame(table(hospital2$local_internamento))
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS" | local_internamento == "HOSPITAL PORTUGUES" | local_internamento == "HOSPITAL PORTUGUÊS" , "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",
if_else(local_internamento == "HR" | local_internamento=="HOSPITAL DA RESTAURA"| local_internamento == "HOSPITAL DA RESTAURACAO"| local_internamento == "HOSPITAL DA RESTAURAÇAO", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL PELOPIDAS SILVEIRA",  "HOSPITAL PELÓPIDAS SILVEIRA", if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR 2" | local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR2" |             local_internamento == "HOSPITAL DE CAMPANHA COVID-19 HPR2" | local_internamento == "HOSPITAL DE CAMPANHA  COVID 19 HPR2" | local_internamento == "HOSPITAL DE CAMPANHA COVID19 HPR 2&NBSP;", "HOSPITAL DE CAMPANHA COVID-19 HPR2", if_else(local_internamento == "HOSPITAL AGAMENOM MAGALHÃES" | local_internamento=="HOSPITAL AGAMENOM MAGALHAES" | local_internamento == "HOSPITAL AGAMENON MAGALHAES", "HOSPITAL AGAMENON MAGALHÃES", if_else(local_internamento == "HOSPITAL ALFA - BOA VIAGEM", "HOSPITAL ALFA BOA VIAGEM", if_else(local_internamento == "POLICLÍNICA E MATERNIDADE PROFESSOR BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA", if_else(local_internamento=="HMR - ENFERMARIA CLINICA", "HMR", if_else(local_internamento == "HOSPITAL DOM HELDER",                       "HOSPITAL DOM HÉLDER", if_else(local_internamento == "HOSPITAL NOSSA SENHORA DO O - JANGA PAULISTA"| local_internamento ==  "HOSPITAL E MATERNIDADE NOSSA SENHORA DO O", "HOSPITAL NOSSA SENHORA DO Ó", if_else(local_internamento %in% c("MATERNIDADE BARROS LIMA", "POLICLINICA BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA", "POLICLINICA E MATERNIDADE PROFESSOR BARROS LIMA", "MATERNIDADE BARROS LIMA"), "POLICLINICA BARROS LIMA", if_else(local_internamento == "HOSPITAL DA MULHER DE RECIFE", "HOSPITAL DA MULHER DO RECIFE", if_else(local_internamento == "HOSPITAL SANTA TERESINHA", "HOSPITAL SANTA TEREZINHA", if_else(local_internamento == "POLICLINICA AMAURY  COUTINHO",              "POLICLINICA AMAURY COUTINHO", as.character(local_internamento))))))))))))))))))
unique(hospital2$local_internamento2)
Hospitais_df = as.data.frame(table(hospital2$local_internamento2))
write.csv(Hospitais_df, paste(path, "hospitais_covid19_PE.csv"))
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 10, height = 7, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
# #df$Classificação.final <- factor()
# municipio = as.data.frame(table(confirmados$municipio))
# municipio$municipio = c(as.character(municipio$Var1))
# # Classificação como fator
# library(ggplot2)
# #ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
# #ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
# plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
#   geom_bar(stat = "identity", position = position_dodge()) +
#   geom_text(aes(label = Freq), size = 3, color = "black") +
#   ggtitle("Município de residência para os casos confirmados") +
#   xlab("") + ylab("Frequência")
# plot_municipio + coord_flip() + theme(legend.position = "none")
# jpeg(paste(path, "municipio_casos.jpg", sep = ""),
#      width = 12, height = 6, units = 'in', res = 300)
# plot_municipio + coord_flip() + theme(legend.position = "none")
# dev.off()
confirmados_srag$idade = as.numeric(confirmados_srag$idade)
head(confirmados_srag$idade)
dim(confirmados_srag)
summary(confirmados_srag$idade)
sd(confirmados_srag$idade, na.rm = TRUE)
a = confirmados_srag %>% filter(idade >=80)
length(a$idade)
# Change line color and fill color
# histograma =ggplot(confirmados, aes(x=idade))+
#   geom_histogram(color="black", fill="deepskyblue",
#                  breaks=seq(0, 100, by=10), alpha = 0.5) +
#   ggtitle("Faixa etária para os casos confirmados de COVID-19 em PE") +
#   xlab("Idade") + ylab("Frequência") +
#   labs(caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco. Dados até",
#                        format(as.Date(today()-1), "%d/%m/%Y")))+
#   scale_x_continuous(breaks = seq(0, 100, by = 10)) +
#   scale_y_continuous(breaks = seq(0, 500, 25))
# histograma
# jpeg(paste(path, "histograma_idade.jpg", sep = ""),
#      width = 6, height = 4, units = 'in', res = 300)
# histograma
# dev.off()
class(confirmados_srag$idade)
confirmados_srag = confirmados_srag %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
#casos leves
confirmados_leves$idade = as.numeric(confirmados_leves$idade)
class(confirmados_leves$idade)
confirmados_leves = confirmados_leves %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
idadeCategorialeve = as.data.frame(table(confirmados_leves$idade_cat))
idadeCategorialeve
plot_idadecatleve = ggplot(idadeCategorialeve, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "orange",
alpha = 0.85) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos leves confirmados para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência")
plot_idadecatleve
jpeg(paste(path, "barra_idade_leve.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatleve
dev.off()
head(select(confirmados_srag, idade, idade_cat))
