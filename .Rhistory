axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1") +   theme(legend.title = element_blank())
evolucao_pie = evolucao_pie +
ggtitle(paste("Evolução dos casos SRAG confirmados para \nCOVID-19 em PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Número de casos SRAG confirmados = ", dim(confirmados_srag)[1]))
evolucao_pie}
jpeg(paste(path, "evolucao_pie_pe.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
evolucao_pie
dev.off()
sexo = as.data.frame(table(confirmados_srag$sexo))
sexo
sexoleve = as.data.frame(table(confirmados_leves$sexo))
sexoleve
names(sexo) <- c("Sexo", "value")
names(sexoleve) <- c("Sexo", "value")
## Código novo para o gráfico de pizza
# Gráfico de pizza
sexo_bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bp
# Pie chart
pie_sexo <- sexo_bp + coord_polar("y", start=0)
pie_sexo
# Customize
{blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexo = pie_sexo +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexo
# Compute the position of labels
data = sexo
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza +
ggtitle(paste("Sexo - Casos confirmados de SRAG para\n COVID-19 em PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos SRAG confirmados = ", dim(confirmados_srag)[1])) +
theme(legend.title = element_blank())
sexo_pizza
}
# Salvando em jpg
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
# Gráfico de pizza - casos leves
{sexo_bpleve <- ggplot(sexoleve, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity", color = "white")
sexo_bpleve
# Pie chart
pie_sexoleve <- sexo_bpleve + coord_polar("y", start=0)
pie_sexoleve
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_sexoleve = pie_sexoleve +  blank_theme +
theme(axis.text.x=element_blank())
pie_sexoleve
# Compute the position of labels
data = sexoleve
data <- data %>%
arrange(desc(Sexo)) %>%
mutate(prop = value / sum(data$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
sexo_pizza <- ggplot(data, aes(x="", y=prop, fill=Sexo)) +
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=6) +
scale_fill_brewer(palette="Set1")
sexo_pizza = sexo_pizza + ggtitle(paste("Sexo - Casos confirmados leves de \nCOVID-19 em PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
labs(caption = paste("Total de casos leves confirmados = ", dim(confirmados_leves)[1])) +
theme(legend.title = element_blank())
sexo_pizza
}
# Salvando em jpg
jpeg(paste(path, "sexo_pe_leve.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
sexo_pizza
dev.off()
## Faixa etária
confirmados_srag$idade = as.numeric(confirmados_srag$idade)
summary(confirmados_srag$idade)
sd(confirmados_srag$idade, na.rm = TRUE)
# casos srag
class(confirmados_srag$idade)
confirmados_srag = confirmados_srag %>%
mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29",
if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49",
if_else(between(idade, 50, 59), "50-59",
if_else(between(idade, 60, 69), "60-69",
if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
#casos leves
confirmados_leves$idade = as.numeric(confirmados_leves$idade)
class(confirmados_leves$idade)
confirmados_leves = confirmados_leves %>% mutate(idade_cat = if_else(idade < 10, "0-9",
if_else(between(idade, 10, 19), "10-19",
if_else(between(idade, 20, 29), "20-29", if_else(between(idade, 30, 39), "30-39",
if_else(between(idade, 40, 49), "40-49", if_else(between(idade, 50, 59), "50-59", if_else(between(idade, 60, 69), "60-69", if_else(between(idade, 70, 79), "70-79", "80 e mais")))))))))
idadeCategorialeve = as.data.frame(table(confirmados_leves$idade_cat))
idadeCategorialeve
plot_idadecatleve = ggplot(idadeCategorialeve, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "orange",
alpha = 0.85) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos leves confirmados para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência") +
labs(caption = paste("IRRD. Fonte: Secretaria de Saúde de PE.\nDados atualizados em",
format(as.Date(today()-1), "%d/%m/%Y")))
plot_idadecatleve
jpeg(paste(path, "barra_idade_leve.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatleve
dev.off()
## idade srag
idadeCategoria = as.data.frame(table(confirmados_srag$idade_cat))
plot_idadecat = ggplot(idadeCategoria, aes(x = Var1, y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "lightblue",
alpha = 0.9) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos casos confirmados SRAG para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_light() +
xlab("") + ylab("Frequência")+
labs(caption = "") +
labs(caption = paste("IRRD. Fonte: Secretaria de Saúde de PE.\nDados atualizados em",
format(as.Date(today()-2), "%d/%m/%Y")))
plot_idadecat
jpeg(paste(path, "barra_idade.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecat
dev.off()
df_obito <- confirmados_srag %>%
filter(evolucao == "ÓBITO")
dim(df_obito)[1]
# letalidade
paste("letalidade = ", round(100*dim(df_obito)[1]/(dim(confirmados_srag)[1]+dim(confirmados_leves)[1]),2), "%", sep = "")
## Sexo
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
## Sumário da Idade
summary(df_obito$idade)
sd(df_obito$idade)
# Porcentagem de idosos
df_obito = df_obito %>%
mutate(idosos = if_else(idade >= 60, "Idoso", "Não Idoso"))
props = as.data.frame(table(df_obito$idosos)) %>%
mutate(prop = round(100*Freq/sum(Freq), 2))
props
## Gráfico de barras da idade
idadeobito <- as.data.frame(table(df_obito$idade_cat))
{plot_idadecatobito = ggplot(idadeobito, aes(x = Var1,
y = Freq)) +
geom_bar(stat = "identity", position = position_dodge(), fill = "darkred",
alpha = 0.75) +
geom_text(aes(label = Freq), color = "black") +
ggtitle(paste("Faixa etária dos óbitos SRAG confirmados para COVID-19\nem PE até",
format(as.Date(today()-2), "%d/%m/%Y"))) +
theme_bw() +
xlab("") + ylab("Frequência") +
labs(caption = paste("IRRD. Fonte: Secretaria de Saúde de PE.\nDados atualizados em",
format(as.Date(today()-1), "%d/%m/%Y")))
plot_idadecatobito}
jpeg(paste(path, "barra_idadeobito.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
plot_idadecatobito
dev.off()
## Histograma de sintomas
df_sintomas <- as.data.frame(table(confirmados_srag$data_dos_primeiros_sintomas))
names(df_sintomas) <- c("data", "casos")
sum(df_sintomas$casos)
df_sintomas
class(df_sintomas$data)
df_sintomas$data = as.character.factor(df_sintomas$data)
df_sintomas$data = as.Date(df_sintomas$data, format = "%d/%m/%Y")
class(df_sintomas$data)
class(df_sintomas$data)
df_sintomas <- df_sintomas %>% filter(data <= as.Date(today()))
#library(ggdark)
{plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em",
format(as.Date(today()-1), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos), by =50))
plot_newcases}
jpeg(paste(path, "histograma_casos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newcases
dev.off()
{
class_final_df <- table(df$data_da_notificacao, df$classificacao_final)
class_final_df <- as.data.frame(class_final_df)
names(class_final_df) <- c("data", "classificacao", "freq")
class(class_final_df$data)
class_final_df$data <- as.character.factor(class_final_df$data)
class_final_df$data <- as.POSIXct(class_final_df$data, format = "%Y-%m-%d")
class(class_final_df$data)
class_final_df$data = as.Date(class_final_df$data)
}
{
table(class_final_df$classificacao)
class(class_final_df$classificacao)
class_final_df$classificacao <- as.character.factor(class_final_df$classificacao)
table(class_final_df$classificacao)
}
{class_final_df <- class_final_df %>%
mutate(classificacao2 = if_else(classificacao == "DESCARTADO NO FORMSUS",
"DESCARTADO",
if_else(classificacao == "EM INVESTIGACAO",
"EM INVESTIGAÇÃO", classificacao)))
class_final_plot = ggplot(class_final_df,
aes(x = data, y = freq, fill = classificacao2)) +
geom_bar(stat = "identity", alpha = 0.9) +
xlab("Data da notificação") +
ylab("Frequência") +
theme_light() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 90),
legend.text = element_text(size = 7.5)) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-17", today())))+
ggtitle("Classificação final dos casos notificados\n em PE" ) +
labs(caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco.\nDados atualizados em", format(as.Date(today()-1), "%d/%m/%Y")))
class_final_plot}
jpeg(paste(path, "class_final_notificados_PE.jpg", sep = ""),
width = 10, height = 6, units = 'in', res = 300)
class_final_plot
dev.off()
confirmados_geral <- rbind(confirmados_leves, confirmados_srag)
conf_evo = table(confirmados_geral$data_da_notificacao, confirmados_geral$evolucao)
conf_evo = as.data.frame(conf_evo)
names(conf_evo) <- c("data", "evolucao", "freq")
conf_evo <- conf_evo %>%
mutate(evolucao = ifelse(evolucao == "INTERNA NO HOSPITAL MUNICIPAL" |
evolucao == "INTERNADO LEITO DE ISOLAMENTO",
"INTERNADO ISOLAMENTO", if_else(evolucao == "RECUPRERADO", "RECUPERADO",as.character(evolucao))))
table(conf_evo$evolucao)
class(conf_evo$data)
conf_evo$data <- as.character.factor(conf_evo$data)
conf_evo$data <- as.POSIXct(conf_evo$data, format = "%Y-%m-%d")
class(class_final_df$data)
conf_evo$data = as.Date(conf_evo$data)
###
conf_evo = conf_evo %>%
mutate(evolucao2 = if_else(evolucao == "INTERNA NO HOSPITAL MUNICIPAL", "INTERNADO LEITO DE ISOLAMENTO",
if_else(evolucao == "RECUPRERADO", "RECUPERADO", evolucao)))
# Gráfico
evolucao_conf = ggplot(conf_evo,
aes(x = data, y = freq, fill = evolucao2)) +
geom_bar(stat = "identity", alpha = 0.9) +
xlab("Data da notificação") +
ylab("Frequência") +
theme_light() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 90),
legend.text = element_text(size = 7.5)) +
scale_x_date(date_breaks = "2 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-17", today())))+
ggtitle("Evolução dos casos confirmados para COVID-19 \nem PE" ) +
labs(caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco.\nDados atualizados em",
format(as.Date(today()-1), "%d/%m/%Y")))
evolucao_conf
jpeg(paste(path, "evolucao_confirmados_PE.jpg", sep = ""),
width = 10, height = 6, units = 'in', res = 300)
evolucao_conf
dev.off()
#---------------------------------------------#
## Hospital de internamento para os casos confirmados
confirmado_geral <-  rbind(confirmados_srag, confirmados_leves)
table(confirmado_geral$local_internamento)
confirmado_geral2 = confirmado_geral %>%
mutate(local_internamento = stringr::str_replace_all(local_internamento, c(
"CENTRO MÉDICO HOSPITALAR - PMPE" = "CMH",
"HOSPITAL AGAMENOM MAGALHÃES" = 	"HAM",
"HOSPITAL AGAMENON MAGALHAES" = 	"HAM",
"HOSPITAL AGAMENON MAGALHÃES" = 	"HAM",
"HOSPITAL AGAMENON MAGALHAES - RECIFE" = 	"HAM",
"HOSPITAL PRIVADOOUTROHAPVIDA OLINDA" = "HAPVIDA OLINDA",
"HOSPITAL HAPVIDA - DERBY" = "HAPVIDA DERBY",
"HOSPITAL BARÃO DE LUCENA" = "HB",
"HOSPITAL DOM HELDER" = "HDH",
"HOSPITAL DOM HÉLDER" = "HDH",
"HOSPITAL DOM HELDER CAMARA" = "HDH",
"HOSPITAL OTAVIO DE FREITAS" = "HOF",
"HOSPITAL OTÁVIO DE FREITAS" = "HOF",
"HOSPITAL OTAVIO DE FREITAS - RECIFE" = "HOF",
"HOSPITAL AGAMENOM MAGALHÃES" = "AGAMENON MAGALHÃES",
"HOSPITAL AGAMENON MAGALHAES" = "AGAMENON MAGALHÃES",
"HOSPITAL AGAMENON MAGALHÃES" = "AGAMENON MAGALHÃES",
"HOSPITAL AGAMENON MAGALHAES - RECIFE" = "AGAMENON MAGALHÃES",
"HOSPITAL ALFA - BOA VIAGEM" = "HOSPITAL ALFA",
"HOSPITAL ALFA BOA VIAGEM" = "HOSPITAL ALFA",
"HOSPITAL DA MULHER DE RECIFE" = "HOSPITAL DA MULHER",
"HOSPITAL DA MULHER DO RECIFE" = "HOSPITAL DA MULHER",
"HOSPITAL DA POLICIA MILITAR" = "HOSPITAL DA POLÍCIA MILITAR",
"HOSPITAL DA RESTAURA" = "HOSPITAL DA RESTAURAÇÃO",
"HOSPITAL DA RESTAURACAO" = "HOSPITAL DA RESTAURAÇÃO",
"HOSPITAL DAS CLINICAS" = "HOSPITAL DAS CLÍNICAS",
"HOSPITAL DE CAMPANHA COVID 19 HPR" = "HOSPITAL DE CAMPANHA COVID 19 HPR1",
"HPR I HOSPITAL PROVISORIO DO RECIFE SANTO AMARO (AURORA)" = "HOSPITAL DE CAMPANHA COVID 19 HPR2",
"HOSPITAL ESPERANCA" = "HOSPITAL ESPERANÇA",
"HOSPITAL ESPERANÇA OLINDA" = "HOSPITAL ESPERANÇA",
"HOSPITAL OTAVIO DE FREITAS" = "HOSPITAL OTÁVIO DE FREITAS",
"HOSPITAL OTAVIO DE FREITAS - RECIFE" = "HOSPITAL OTÁVIO DE FREITAS",
"HOSPITAL PELOPIDAS SILVEIRA" = "HOSPITAL PELÓPIDAS SILVEIRA",
"HOSPITAL REGIONAL DE PALMARES DR. SILVIO MAGALHÃES" = "HOSPITAL REGIONAL DR SÍLVIO MAGALHÃES",
"HOSPITAL SAO MARCOS" = "HOSPITAL SÃO MARCOS",
"HOSPITAL UNIME RECIFE I" = "HOSPITAL UNIMED RECIFE I",
"HOSPITAL UNIMED DE PETROLINA" = "HOSPITAL UNIMED PETROLINA",
"MATERNIDADE BRITES DE ALBUQUERQUE-OLINDA" = "MATERNIDADE BRITES DE ALBUQUERQUE",
"OUTRO" = "NÃO IDENTIFICADO",
"POLICLÍNICA E MATERNIDADE PROFESSOR BARROS LIMA" = "POLICLINICA E MATERNIDADE BARROS LIMA",
"UNIDADE MISTA PROF. BARROS LIMA" = "POLICLINICA E MATERNIDADE BARROS LIMA",
"SEM INFORMAÇÃO" = "NÃO IDENTIFICADO",
"UPA SÃO LOURENÇO" = "UPA SÃO LOURENÇO DA MATA",
"HOSPITAL DA RESTAURAÇÃOCAO" = "HOSPITAL DA RESTAURAÇÃO",
"HOSPITAL DA RESTAURAÇÃOÇÃO" = "HOSPITAL DA RESTAURAÇÃO",
"HOSPITAL DE CAMPANHA COVID 19 HPR12" = "HOSPITAL DE CAMPANHA COVID 19 HPR2"
)))
confirmado_geral2 <- confirmado_geral2 %>%
mutate(local_internamento = stringr::str_replace(local_internamento, "REAL HOSPITAL PORTUGUÊS", "HOSPITAL PORTUGUÊS"),
local_internamento = stringr::str_replace(local_internamento, "VEHHOSPITAL REGIONAL DR SÍLVIO MAGALHÃES", "HOSPITAL REGIONAL DR SÍLVIO MAGALHÃES"))
confirmado_geral2 <- confirmado_geral2 %>%
mutate(
local_internamento = if_else(local_internamento == "CENTRO HOSPITALAR - PMPE", "CMH",
if_else(local_internamento == "CENTRO MEDICO HOSPITALAR PM PE", "CMH",
if_else(local_internamento == "HOSPITAL E MATERNIDADE NOSSA SENHORA DO O", "CESAC - PRADO",
if_else(local_internamento == "HOSPITAL NOSSA SENHORA DO O", "CESAC - PRADO",
if_else(local_internamento == "HOSPITAL NOSSA SENHORA DO O - JANGA PAULISTA", "CESAC - PAULISTA",
if_else(local_internamento == "HOSPITAL NOSSA SENHORA DO O JANGA PAULISTA", "CESAC - PAULISTA",
if_else(local_internamento == "GERES", "	NÃO IDENTIFICADO",
if_else(local_internamento == "HDH CAMARA", "HDH",
if_else(local_internamento == "HMR - ENFERMARIA CLINICA", "HMR",
if_else(local_internamento == "HMR - UTI", "HMR",
if_else(local_internamento == "HOF - RECIFE", "HOF",
if_else(local_internamento == "HOSITAL DOM MOURA", "HOSPITAL DOM MOURA",
if_else(local_internamento == "HOSPITAL SANTA TERESINHA", "HOSPITAL SANTA TEREZINHA",
if_else(local_internamento == "POLICLINICA E MATERNIDADE PROFESSOR BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA",
if_else(local_internamento == "POLICLINICA BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA",
if_else(local_internamento == "MATERNIDADE BARROS LIMA", "POLICLINICA E MATERNIDADE BARROS LIMA",
if_else(local_internamento == "PCR AURORA", "PCR - AURORA",
if_else(local_internamento == "VEH-HAM", "HAM",
if_else(local_internamento == "VEH - HAM", "HAM",
if_else(local_internamento == "VEH-HOF", "HOF",
if_else(local_internamento == "HOSPITAL AGAMENOM MAGALHAES", "HAM",
if_else(local_internamento == "HOSPITAL ARLINDO MOURA", "HOSPITAL ARMINDO MOURA",
if_else(local_internamento == "HOSPITAL BARAO DE LUCENA", "HBL",
if_else(local_internamento == "HOSPITAL  DE CAMPANHA COVID19 HPR", "HOSPITAL DE CAMPANHA COVID-19 HPR2",
if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR1 2", "HOSPITAL DE CAMPANHA COVID-19 HPR2",
if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID 19 HPR2", "HOSPITAL DE CAMPANHA COVID-19 HPR2",
if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID19 HPR", "HOSPITAL DE CAMPANHA COVID-19 HPR2",
if_else(local_internamento == "HOSPITAL DE CAMPANHA COVID19 HPR 2&NBSP;", "HOSPITAL DE CAMPANHA COVID-19 HPR2",
if_else(local_internamento == "HOSPITAL MILITAR DE AREA", "Hospital Militar de Área",
if_else(local_internamento == "HOSPITAL MILITAR DE AREA DO RECIFE", "Hospital Militar de Área",
if_else(local_internamento == "HOSPITAL PRIVADO", "NÃO IDENTIFICADO",
if_else(local_internamento == "HOSPITAL PRIVADOHAPVIDA OLINDA", "HAPVIDA OLINDA",
if_else(local_internamento == "HOSPITAL PORTUGUES", "HOSPITAL PORTUGUÊS",
if_else(local_internamento == "REAL HOSPITAL PORTUGUES", "HOSPITAL PORTUGUÊS",
if_else(local_internamento == "HOSPITAL DA RESTAURAÇÃOÇAO", "HOSPITAL DA RESTAURAÇÃO",
if_else(local_internamento == "HOSPITAL REGIONAL DE PALMARES DR SILVIO MAGALHAES", "Hospital Regional de Palmares",
if_else(local_internamento == "HOSPITAL REGIONAL DR SILVIO MAGALHAES", "Hospital Regional de Palmares",
if_else(local_internamento == "VEHHOSPITAL REGIONAL DR SILVIO MAGALHAES", "Hospital Regional de Palmares",
if_else(local_internamento == "PCR COELHOS", "PCR - COELHOS",
if_else(local_internamento == "UPA CAXANGA", "UPA CAXANGÁ",
if_else(local_internamento == "HOSPITAL CORREIA PICANCO", "	HOSPITAL CORREIA PICANÇO",
if_else(local_internamento == "HOSPITAL GETULIO VARGAS", 	"HOSPITAL GETÚLIO VARGAS",
if_else(local_internamento == "HOSPITAL DA RESTAURAÇÃO", "HR",
as.character(local_internamento)))))))))))))))))))))))))))))))))))))))))))))
#=====================#
# Internados em leito #
#=====================#
table(confirmado_geral2$evolucao)
internados_leito <- confirmado_geral2 %>%
filter(evolucao == "INTERNA NO HOSPITAL MUNICIPAL" |
evolucao == "INTERNADO LEITO DE ISOLAMENTO")
internados_leito <- table(internados_leito$local_internamento)
internados_leito <- as.data.frame(internados_leito)
class(internados_leito$Var1)
internados_leito$Var1 = as.character.factor(internados_leito$Var1)
internados_leito = internados_leito[-1,]
dim(internados_leito)
# Dividir em duas partes
internados_leito1 <- internados_leito[1:94,]
202/2
# Dividir em duas partes
internados_leito1 <- internados_leito[1:101,]
internados_leito2 <- internados_leito[102:202,]
# Dividir em duas partes
internados_leito1 <- internados_leito[1:101,]
internados_leito2 <- internados_leito[102:202,]
# Gráfico
library(ggplot2)
plot_hospital = ggplot(internados_leito1,
aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "Leito de isolamento (Parte 1)") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 14, height = 10, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(internados_leito2,
aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até", format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "Leito de isolamento (Parte 2)") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE2.jpg", sep = ""),
width = 14, height = 10, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
# internado UTI
internados_uti <- confirmado_geral2 %>%
filter(evolucao == "INTERNADO UTI")
internados_uti = as.data.frame(table(internados_uti$local_internamento))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(internados_uti,
aes(x = reorder(Var1, -Freq),
y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), color = "black", size = 3) +
labs(title = paste("Pacientes internados com COVID-19 \nem PE até",
format(as.Date(today()-2), "%d/%m/%Y")),
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 10, height = 7, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
