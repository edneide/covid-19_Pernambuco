theme_ipsum() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 90),
legend.text = element_text(size = 7)) +
scale_x_date(date_breaks = "7 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-17", dmy(hoje))))+
ggtitle("Evolução dos casos confirmados para COVID-19 \nem PE" ) +
labs(caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco.\nDados atualizados em",
format(dmy(hoje), "%d/%m/%Y")))
evolucao_conf
jpeg(paste(path, "evolucao_confirmados_PE.jpg", sep = ""),
width = 10, height = 6, units = 'in', res = 300)
evolucao_conf
dev.off()
##------------------##
###### Raça/Cor ######
##------------------##
names(confirmados_geral)
confirmados_geral <- confirmados_geral %>%
mutate(racai = if_else(raca == "INDIGENA", "INDÍGENA",
if_else(raca == "#N/DISP", "IGNORADO",
if_else(raca == "DEPLICIDADE N NOT", "IGNORADO",
as.character(raca)))))
table(confirmados_geral$racai)
raca_corDF <- as.data.frame(table(confirmados_geral$racai))
raca_corDF
names(raca_corDF) <- c("category", "count")
raca_corDF$category <- as.character.factor(raca_corDF$category)
# Compute percentages
data <- raca_corDF
data$fraction <- data$count / sum(data$count)
# Compute the cumulative percentages (top of each rectangle)
data$ymax <- cumsum(data$fraction)
# Compute the bottom of each rectangle
data$ymin <- c(0, head(data$ymax, n=-1))
# Compute label position
data$labelPosition <- (data$ymax + data$ymin) / 2
# Compute a good label
data$label <- paste0(data$category, "\n ", round(100*data$fraction,2), "%")
data$label2 <- paste0(round(100*data$fraction,2), "%")
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
# Make the plot
raca_cor_plot <- ggplot(data, aes(ymax=ymax, ymin=ymin, xmax=4, xmin=3, fill=category)) +
geom_rect() +
geom_text(x = 1.5,
aes(y=labelPosition,
label=label, color=category),
size=4) + # x here controls label position (inner / outer)
scale_fill_manual(values = cbPalette) +
scale_color_manual(values=cbPalette) +
coord_polar(theta="y") +
xlim(c(-1, 4)) +
theme_void() +
theme(legend.position = "none")
raca_cor_plot
##
labels <- data$label
raca_cor_plot <- ggdonutchart(data, "count", label = labels,
fill = "category", color = "white") +
theme(legend.title = element_blank(),
legend.position = "bottom") +
labs(fill="",
title = "Raça/Cor \n(COVID-19 em PE)",
subtitle = "",
caption = paste("IRRD. Fonte:SES-PE.\nDados atualizados em",
format(ymd(hoje), "%d/%m/%Y")))
##
labels <- data$label
raca_cor_plot <- ggdonutchart(data, "count", label = labels,
fill = "category", color = "white") +
theme(legend.title = element_blank(),
legend.position = "bottom") +
labs(fill="",
title = "Raça/Cor \n(COVID-19 em PE)",
subtitle = "",
caption = paste("IRRD. Fonte:SES-PE.\nDados atualizados em",
format(dmy(hoje), "%d/%m/%Y")))
raca_cor_plot
###################################
# Salvando em jpg
#path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 28-04-2020/"
jpeg(paste(path, "raca_cor_plot.jpg", sep = ""),
width = 7, height = 7, units = 'in', res = 300)
raca_cor_plot
dev.off()
# Gráfico
jpeg(paste(path, "raca_cor_pe.jpg", sep = ""),
width = 8, height = 7, units = 'in', res = 300)
ggplot(data, aes(x = reorder(category, -count),
y = count, fill = category)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = label2), color = "black", size = 4) +
theme_ipsum() +
xlab("") + ylab("Frequência") +
coord_flip() + theme(legend.position = "none") +
labs(fill="",
title = "Casos de covid-19 em PE por raça/cor",
subtitle = "",
caption = paste("IRRD/PE. Fonte: SES-PE.\nDados atualizados em",
format(as.Date(today()), "%d/%m/%Y")))
dev.off()
##---------------------------------------------------##
###### Cidades da Região Metropolitana do Recife ######
##--------------------------------------------------##
RMR <- c("ABREU E LIMA", "ARACOIABA", "CABO DE SANTO AGOSTINHO",
"CAMARAGIBE", "GOIANA", "IGARASSU", "ILHA DE ITAMARACA",
"IPOJUCA", "ITAPISSUMA", "JABOATAO DOS GUARARAPES", "MORENO",
"OLINDA", "PAULISTA", "RECIFE", "SAO LOURENCO DA MATA")
# Criando sub-base para região metropolitana
covid_rmr <- confirmados_geral %>%
filter(municipio %in% RMR)
table(covid_rmr$municipio)
############## Interior
covid_interior <- confirmados_geral %>%
filter(!(municipio %in% RMR),
municipio != "OUTRO PAIS",
municipio != "OUTRO ESTADO")
table(covid_interior$municipio)
# Preparação para os gráficos
casos_rmr <- as.data.frame(table(covid_rmr$data_da_notificacao))
names(casos_rmr) <- c("data", "casos")
# Alterando as classes
casos_rmr$data = as.character.factor(casos_rmr$data)
class(casos_rmr$data)
library(lubridate)
casos_rmr$data = ymd(casos_rmr$data, tz = "America/Sao_Paulo")
casos_rmr$casos = as.numeric(casos_rmr$casos)
class(casos_rmr$data)
casos_rmr$data = as.Date(casos_rmr$data)
library(pracma)
# Adicionando as médias móveis
casos_rmr <- casos_rmr %>%
mutate(media_movel = movavg(casos_rmr$casos, 7, "s"))
# Gráfico RMR
library(hrbrthemes)
casos_rmr_plot <- ggplot(data = casos_rmr, aes(x = data)) +
geom_bar(aes(y = casos, color = "Casos por dia"),
fill = "blue",
stat="identity", alpha = 0.5)+
geom_line(aes(y = media_movel, color = "Média móvel (7 dias)"), size = 2)+
scale_color_manual(values = c("blue", "red")) +
theme_ipsum() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
legend.title = element_blank()) +
labs(title = "Casos de COVID-19 RMR",
subtitle = "",
caption = paste("IRRD/PE. Fonte: SES-PE.\n Dados atualizados em ",
format(as.Date(hoje), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "4 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", today()))) +
xlab("") +
ylab("Casos diários")
casos_rmr_plot
# Salvando o html
library(plotly)
casos_rmr_plot2 <- ggplotly(casos_rmr_plot, width = 3, height = 6)
casos_rmr_plot2
htmlwidgets::saveWidget(casos_rmr_plot2,
paste(path, "casos_rmr_plot.html"))
# Para o interior
# Preparação para os gráficos
casos_interior <- as.data.frame(table(covid_interior$data_da_notificacao))
names(casos_interior) <- c("data", "casos")
# Alterando as classes
casos_interior$data = as.character.factor(casos_interior$data)
class(casos_interior$data)
library(lubridate)
casos_interior$data = ymd(casos_interior$data)
casos_interior$casos = as.numeric(casos_interior$casos)
library(pracma)
# Adicionando as médias móveis
casos_interior <- casos_interior %>%
mutate(media_movel = movavg(casos_interior$casos, 7, "s"))
# Gráfico RMR
library(hrbrthemes)
casos_interior_plot <- ggplot(data = casos_interior, aes(x = data)) +
geom_bar(aes(y = casos, color = "Casos por dia"),
fill = "darkgreen",
stat= "identity", alpha = 0.5)+
geom_line(aes(y = media_movel, color = "Média móvel (7 dias)"), size = 2)+
scale_color_manual(values = c("darkgreen", "blue")) +
theme_ipsum() +
theme(legend.position = "bottom",
axis.text.x = element_text(angle = 45),
legend.title = element_blank()) +
labs(title = "Casos de COVID-19 no interior de PE",
subtitle = "",
caption = paste("IRRD/PE. Fonte: SES-PE.\n Dados atualizados em ",
format(ymd(hoje), "%d/%m/%Y"))) +
scale_x_date(date_breaks = "7 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-25", ymd(hoje)))) +
xlab("") +
ylab("Casos diários")
casos_interior_plot
# Salvando o html
library(plotly)
casos_interior_plot2 <- ggplotly(casos_interior_plot, width = 3, height = 6)
casos_interior_plot2
htmlwidgets::saveWidget(casos_interior_plot2,
paste(path, "casos_interior_plot.html"))
library(httr)
library(jsonlite)
library(dplyr)
library(lubridate)
## Base de dados
library(readr)
hoje2 = format(ymd(hoje), "%d-%m-%Y")
genomika <- read_delim(paste0("~/Google Drive/Coronavirus/IRRD/planilhas de pe/", hoje2, "/genomika.csv"),
";", escape_double = FALSE, trim_ws = TRUE)
hoje
hoje
## Base de dados
library(readr)
genomika <- read_delim(paste0("~/Google Drive/Coronavirus/IRRD/planilhas de pe/", hoje, "/genomika.csv"),
";", escape_double = FALSE, trim_ws = TRUE)
# Sumário
genomika_df <- genomika
names(genomika_df)
head(genomika_df$resultado)
resultado <- as.data.frame(table(genomika_df$resultado))
resultado <- resultado %>% mutate(prop = round(100*Freq/sum(Freq), 1))
resultado
names(resultado)[1] <- "Resultado"
library(ggplot2)
# Gráfico para resultado
# Gráfico de pizza
resultado_bp <- ggplot(resultado, aes(x = "", y = Freq, fill = Resultado)) +
geom_bar(width = 1, stat = "identity", color = "white")
resultado_bp
# Pie chart
pie_resultado <- resultado_bp + coord_polar("y", start=0)
pie_resultado
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
pie_resultado= pie_resultado +  blank_theme +
theme(axis.text.x=element_blank())
pie_resultado
# Compute the position of labels
data = resultado
head(data)
data <- data %>%
arrange(desc(Resultado)) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
head(data)
# Retirar o pendente se a porcentagem for próxima de 0
#data2 = data[-2,] # Sem o Pendente
data2 = data
# Basic piechart
resultado_pie <- ggplot(data2, aes(x="", y=prop, fill=Resultado)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(Freq, "(", prop, "%", ")", sep = "")),
color = "black", size=3) +
scale_fill_brewer(palette="Set1")
resultado_pie = resultado_pie +
ggtitle("Resultados dos testes para COVID-19 em PE\nGenomika/LIKA-UFPE") +
labs(caption = paste("IRRD/PE. Dados atualizados em", format(ymd(hoje), "%d/%m/%Y"))) +
theme(legend.title = element_blank())
resultado_pie = resultado_pie +
ggtitle("Resultados dos testes para COVID-19 em PE\nGenomika/LIKA-UFPE") +
labs(caption = paste("IRRD/PE. Dados atualizados em", format(dmy(hoje), "%d/%m/%Y"))) +
theme(legend.title = element_blank())
resultado_pie
# Salvando em jpg
jpeg(paste(path, "genomika_dados.jpg", sep = ""),
width = 5, height = 4, units = 'in', res = 300)
resultado_pie
dev.off()
# Número de testes por dia
# Gráfico de barras
# Filtrando Data de atendimento e resultado
library(dplyr)
df_atend_result <- genomika_df %>%
dplyr::select(data_atendimento, resultado)
class(df_atend_result$data_atendimento)
df_atend_result$data_atendimento = as.Date(df_atend_result$data_atendimento)
testes_dia = table(df_atend_result$data_atendimento, df_atend_result$resultado)
testes_dia = as.data.frame(testes_dia)
names(testes_dia) = c("data_atend", "resultado", "freq")
# Incluindo o total de testes
total = as.data.frame(table(genomika_df$data_atendimento))
names(total) = c("data_atend", "freq")
total$data_atend = as.Date(total$data_atend)
total = total %>% mutate(resultado = "Total")
total = total %>% dplyr::select(data_atend, resultado, freq)
# Juntando tudo
class(testes_dia$data_atend)
testes_dia$data_atend = as.Date(testes_dia$data_atend)
testes_dia2 = rbind(testes_dia, total)
testes_dia2$resultado = as.character(testes_dia2$resultado)
str(testes_dia2)
###
testes_dia$data_atend = as.Date(testes_dia$data_atend)
plot <- ggplot(testes_dia,
aes(x = data_atend, y = freq, fill = resultado)) +
geom_bar(stat = "identity", alpha = 0.9) +
xlab("Data de atendimento") +
ylab("Quantidade de testes diários") +
scale_fill_manual(values = c("black", "blue", "yellow", "red"))+
theme_ipsum() +
theme(legend.title = element_blank(),
legend.position = "bottom",
axis.text.x = element_text(angle = 45)) +
scale_x_date(date_breaks = "7 days", date_labels = "%b %d",
limits = as.Date(c("2020-03-17", dmy(hoje)))) +
ggtitle("Testes diários para COVID-19 em PE\nGenomika/LIKA-UFPE") +
labs(caption = paste("IRRD/PE. Dados atualizados em", format(as.Date(today()-1), "%d/%m/%Y"))) +
theme(legend.title = element_blank())
plot
#==============================#
# Salvar #
#==============================#
jpeg(paste(path, "genomika_testes.jpg", sep = ""),
width = 7, height = 6, units = 'in', res = 300)
plot
dev.off()
###################################
library('ggthemes')
library('ggthemr')
ggthemr_reset()
ggthemr("flat")
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 4, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 4, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 4, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3, angle = 90)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 4, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "gray", size = 3, angle = 60)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 4, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3, angle = 60)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 7, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3, angle = 60)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
plot6 <- testes_dia2 %>%
ggplot(aes(x = data_atend, y =  resultado, fill = freq)) +
#geom_raster(color = "black") +
geom_point(size = 7, alpha = 1, shape = 22,
color = "gray") +
scale_fill_viridis_c(direction = -1)+
theme_bw()+
geom_text(aes(x = data_atend, y = resultado, label = freq), color = "black", size = 3)+
labs(x = "Data de atendimento", y = "Resultado", fill = "Quantidade \nde testes",
title = "Quantidade de testes",
subtitle = "Genomika/LIKA-UFPE",
caption = paste("IRRD-PE. Dados atualizados em",
format(as.Date(today()-1), "%d-%m-%Y"))) +
theme(axis.text.x = element_text(angle = 45, size = 8, face = "bold"))+
theme(axis.text = element_text(color = "dimgray", size = 10, face = "bold")) +
scale_x_date(date_labels = "%b %d", date_breaks = "7 days")
plot6
###################################
# Salvando em jpg
#path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 28-04-2020/"
jpeg(paste(path, "genomika_testes_dia.jpg", sep = ""),
width = 13, height = 7, units = 'in', res = 300)
plot6
dev.off()
#=====================#
# Histograma de Idade #
#=====================#
class(genomika_df$data_nascimento)
# Código para idade
#idade = lubridate::time_length(difftime(Sys.Date(), data_de_nascimento), "years")
#lubridate::as_date(data_atualizacao)
library(lubridate)
genomika_df = genomika_df %>%
mutate(data_nasc = lubridate::as_date(data_nascimento),
idade = lubridate::time_length(difftime(Sys.Date(), data_nasc), "years"))
indices_excluir <- which(genomika_df$idade < 0)
genomika_df = genomika_df %>%
mutate(sexo2 = if_else(sexo == 0, "Masculino", "Feminino"))
# Outro
library(hrbrthemes)
genomika_df2 = genomika_df[-indices_excluir,]
histogram <- genomika_df2 %>%
ggplot(aes(x = idade, fill = sexo2)) +
geom_histogram(color="#e9ecef", alpha=0.75, position = 'identity') +
scale_fill_manual(values=c("#ffcc00", "#404080")) +
theme_ipsum() +
labs(fill="",
title = "Testes realizados pela \nGenomika/LIKA-UFPE",
subtitle = "",
caption = paste("IRRD. Dados atualizados em",
format(ymd(hoje), "%d/%m/%Y")))+
xlab("Idade") +
ylab("Frequência")
histogram
# Outro
library(hrbrthemes)
genomika_df2 = genomika_df[-indices_excluir,]
histogram <- genomika_df2 %>%
ggplot(aes(x = idade, fill = sexo2)) +
geom_histogram(color="#e9ecef", alpha=0.75, position = 'identity') +
scale_fill_manual(values=c("#ffcc00", "#404080")) +
theme_ipsum() +
labs(fill="",
title = "Testes realizados pela \nGenomika/LIKA-UFPE",
subtitle = "",
caption = paste("IRRD. Dados atualizados em",
format(dmy(hoje), "%d/%m/%Y")))+
xlab("Idade") +
ylab("Frequência")
histogram
jpeg(paste(path, "genomika_testes_histogram.jpg", sep = ""),
width = 8, height = 6, units = 'in', res = 300)
histogram
dev.off()
