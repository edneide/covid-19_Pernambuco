hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
table(hospital2$local_internamento)
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", as.character(local_internamento))))
table(hospital2$local_internamento2)
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
labs(title = "Pacientes internados com COVID-19 (PE)",
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "municipio_casos.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_municipio + coord_flip() + theme(legend.position = "none")
dev.off()
confirmados$idade = as.numeric(confirmados$idade)
confirmados$idade
# Change line color and fill color
histograma =ggplot(confirmados, aes(x=idade))+
geom_histogram(color="black", fill="deepskyblue",
breaks=seq(10,100, by=10)) +
ggtitle("Faixa etária para os casos confirmados de COVID-19 em PE") +
xlab("Idade") + ylab("Frequência") +
scale_x_continuous(breaks = seq(10, 100, by = 10)) +
scale_y_continuous(breaks = seq(0, max(confirmados$idade), by = 5))
histograma
jpeg(paste(path, "histograma_idade.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
histograma
dev.off()
df_obito <- confirmados %>%
filter(evolucao == "ÓBITO")
dim(df_obito)[1]
paste("letalidade = ", round(100*dim(df_obito)[1]/dim(confirmados)[1],2), "%", sep = "")
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
summary(df_obito$idade)
sd(df_obito$idade)
df_obito = df_obito %>% mutate(idosos = if_else(idade >= 60, "Idoso", "Não Idoso"))
props = as.data.frame(table(df_obito$idosos)) %>%
mutate(prop = round(100*Freq/sum(Freq), 2))
props
residencia = as.data.frame(table(df_obito$municipio)) %>%
mutate(prop = round(100*Freq/sum(Freq),2))
residencia %>% arrange(desc(Freq))
write.csv(residencia, paste(path, "obito_residencia_pe.csv"))
round(sum(residencia$prop),1)
head(confirmados)
names(confirmados)
confirmados2 <- confirmados %>%
select(municipio, geres)
table(confirmados2$geres)
geres = filter(confirmados2, geres == "XII")
unique(geres$municipio)
df_sintomas <- as.data.frame(table(confirmados$data_dos_primeiros_sintomas))
names(df_sintomas) <- c("data", "casos")
sum(df_sintomas$casos)
df_sintomas
class(df_sintomas$data)
df_sintomas$data = as.character.factor(df_sintomas$data)
df_sintomas$data = as.Date(df_sintomas$data, format = "%d/%m/%Y")
class(df_sintomas$data)
df_sintomas <- df_sintomas[-4,]
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos)))
plot_newcases
jpeg(paste(path, "histograma_casos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newcases
dev.off()
head(df_obito)
obito_sintomas = as.data.frame(table(df_obito$data_dos_primeiros_sintomas))
names(obito_sintomas) = c("data", "obitos")
class(obito_sintomas$data)
obito_sintomas$data = as.character.factor(obito_sintomas$data)
obito_sintomas$data = as.Date(obito_sintomas$data, format = "%d/%m/%Y")
class(obito_sintomas$data)
plot_newdeaths <- ggplot(obito_sintomas, aes(x = data, y = obitos)) +
geom_bar(stat="identity", color = "black", fill = "darkblue", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Novos óbitos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos óbitos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(obito_sintomas$data)))
plot_newdeaths
jpeg(paste(path, "histograma_obitos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newdeaths
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",as.character(local_internamento))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
table(hosp1$Var1)
View(hosp1)
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",                                                   as.character(local_internamento)))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
labs(title = "Pacientes internados com COVID-19 (PE)",
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 8 height = 5, units = 'in', res = 300)
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 8, height = 5, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
library(dplyr)
library(ggplot2)
library(readr)
library(lubridate)
pe_municipios <- read.csv('https://raw.githubusercontent.com/edneide/covid-19_Pernambuco/master/covid-19_Pernambuco.csv')
#pe_municipios <- read_delim("~/Google Drive/Coronavirus/IRRD/planilhas de pe/31-03-2020/recife_att_2020-03-31_22-59.csv",
#    ";", escape_double = FALSE, trim_ws = TRUE)
df <- pe_municipios[,-1]
names(df)
class(df$classificacao_final)
# Convertendo em character
df <- data.frame(lapply(df, as.character), stringsAsFactors=FALSE)
# Checando a classe
class(df$classificacao_final)
clasificacao = as.data.frame(table(df$classificacao_final))
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_class = ggplot(clasificacao, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
ggtitle("Classificação Final") +
xlab("") + ylab("Frequência")
plot_class + coord_flip() + theme(legend.position = "none")
path <- "/Users/edneideramalho/Google Drive/Coronavirus/IRRD/Informes e relatórios/graficos 08-04-2020/"
jpeg(paste(path, "classificacao_pe.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_class + coord_flip() + theme(legend.position = "none")
dev.off()
cenarios_pe = as.data.frame(table(df$classificacao_final))
cenarios_pe
confirmados = df %>%
filter(classificacao_final == "CONFIRMADO")
evolucao = as.data.frame(table(confirmados$evolucao))
plot_evolucao = ggplot(evolucao, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
labs(title = "Casos confirmados",
subtitle = "Evolução") +
xlab("") + ylab("Frequência")
plot_evolucao + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "evolucao_pe.jpg", sep = ""),
width = 5, height = 4, units = 'in', res = 300)
plot_evolucao + coord_flip() + theme(legend.position = "none")
dev.off()
# Gráfico de pizza
bp_evolucao <- ggplot(evolucao, aes(x = "", y = Freq, fill = Var1)) +
geom_bar(width = 1, stat = "identity", color = "white")
bp_evolucao
# Pie chart
pie_evolucao <- bp_evolucao + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_evolucao = pie_evolucao +  blank_theme +
theme(axis.text.x=element_blank())
# Compute the position of labels
data = evolucao
data <- data %>%
arrange(desc(Var1)) %>%
mutate(prop = Freq / sum(data$Freq) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
names(data)[1] <- "Evolução"
evolucao_pie <- ggplot(data, aes(x="", y=prop, fill=Evolução)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
#theme(legend.position="bottom") +
geom_text(aes(y = ypos, label = paste(round(prop,1), "%", sep = "")),
color = "white", size=4) +
scale_fill_brewer(palette="Set1")
evolucao_pie + ggtitle("Evolução dos casos confirmados")
jpeg(paste(path, "evolucao_pie_pe.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
evolucao_pie + ggtitle("Evolução dos casos confirmados")
dev.off()
sexo = as.data.frame(table(confirmados$sexo))
names(sexo) <- c("Sexo", "value")
bp <- ggplot(sexo, aes(x = "", y = value, fill = Sexo)) +
geom_bar(width = 1, stat = "identity")
# Pie chart
pie <- bp + coord_polar("y", start=0)
# Customize
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold")
)
# Apply blank theme
library(scales)
plot_sexo = pie + scale_fill_brewer() +  blank_theme +
theme(axis.text.x=element_blank(), legend.position = "bottom") +
geom_text(aes(y = value/3 + c(0, cumsum(value)[-length(value)]),
label = paste(value,"(", round(100*value/sum(value),1),"%", ")", sep = "")), size=5) + ggtitle("Casos confirmados")
plot_sexo
jpeg(paste(path, "sexo_pe.jpg", sep = ""),
width = 4, height = 4, units = 'in', res = 300)
plot_sexo
dev.off()
#df$Classificação.final <- factor()
#hospital = df %>% filter(EVOLUÇÃO == "INTERNADO", Classificação.final == "CONFIRMADO")
# Leito de isolamento
hospital = df %>%
filter(evolucao == "INTERNADO LEITO DE ISOLAMENTO",
classificacao_final == "CONFIRMADO")
hospital = hospital %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ", if_else(local_internamento == "HOSPITAL PORTUGÊS", "HOSPITAL PORTUGUÊS",if_else(local_internamento == "UPA SÃO LOURENÇO", "UPA SÃO LOURENÇO DA MATA",                                                   as.character(local_internamento)))))
hosp1 <- as.data.frame(table(hospital$local_internamento2))
hosp1$Var1 = as.character.factor(hosp1$Var1)
# Gráfico
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_hospital = ggplot(hosp1, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
labs(title = "Pacientes internados com COVID-19 (PE)",
subtitle = "Leito de isolamento") +
xlab("") + ylab("Frequência")
plot_hospital + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internado_leitoPE.jpg", sep = ""),
width = 8, height = 5, units = 'in', res = 300)
plot_hospital + coord_flip() + theme(legend.position = "none")
dev.off()
# UTI
hospital2 = df %>%
filter(evolucao == "INTERNADO UTI",
classificacao_final == "CONFIRMADO")
table(hospital2$local_internamento)
hospital2 = hospital2 %>%
mutate(local_internamento2 = if_else(local_internamento == "HUOC",
"HOSPITAL OSWALDO CRUZ",
if_else(local_internamento == "HOSPITAL PORTUGUÊS", "REAL HOSPITAL PORTUGUÊS", as.character(local_internamento))))
table(hospital2$local_internamento2)
hosp2 <- as.data.frame(table(hospital2$local_internamento2))
# Gráfico
library(ggplot2)
plot_hospital2 = ggplot(hosp2, aes(x = reorder(Var1, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
labs(title = "Pacientes internados com COVID-19 (PE)",
subtitle = "UTI") +
xlab("") + ylab("Frequência")
plot_hospital2 + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "internados_uti_pe.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_hospital2 + coord_flip() + theme(legend.position = "none")
dev.off()
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq)) +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "municipio_casos.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_municipio + coord_flip() + theme(legend.position = "none")
dev.off()
confirmados$idade = as.numeric(confirmados$idade)
confirmados$idade
# Change line color and fill color
histograma =ggplot(confirmados, aes(x=idade))+
geom_histogram(color="black", fill="deepskyblue",
breaks=seq(10,100, by=10)) +
ggtitle("Faixa etária para os casos confirmados de COVID-19 em PE") +
xlab("Idade") + ylab("Frequência") +
scale_x_continuous(breaks = seq(10, 100, by = 10)) +
scale_y_continuous(breaks = seq(0, max(confirmados$idade), by = 5))
histograma
jpeg(paste(path, "histograma_idade.jpg", sep = ""),
width = 6, height = 4, units = 'in', res = 300)
histograma
dev.off()
df_obito <- confirmados %>%
filter(evolucao == "ÓBITO")
dim(df_obito)[1]
paste("letalidade = ", round(100*dim(df_obito)[1]/dim(confirmados)[1],2), "%", sep = "")
round(100*table(df_obito$sexo)/sum(table(df_obito$sexo)), 2)
summary(df_obito$idade)
sd(df_obito$idade)
df_obito = df_obito %>% mutate(idosos = if_else(idade >= 60, "Idoso", "Não Idoso"))
props = as.data.frame(table(df_obito$idosos)) %>%
mutate(prop = round(100*Freq/sum(Freq), 2))
props
residencia = as.data.frame(table(df_obito$municipio)) %>%
mutate(prop = round(100*Freq/sum(Freq),2))
residencia %>% arrange(desc(Freq))
write.csv(residencia, paste(path, "obito_residencia_pe.csv"))
round(sum(residencia$prop),1)
head(confirmados)
names(confirmados)
confirmados2 <- confirmados %>%
select(municipio, geres)
table(confirmados2$geres)
geres = filter(confirmados2, geres == "XII")
unique(geres$municipio)
df_sintomas <- as.data.frame(table(confirmados$data_dos_primeiros_sintomas))
names(df_sintomas) <- c("data", "casos")
sum(df_sintomas$casos)
df_sintomas
class(df_sintomas$data)
df_sintomas$data = as.character.factor(df_sintomas$data)
df_sintomas$data = as.Date(df_sintomas$data, format = "%d/%m/%Y")
class(df_sintomas$data)
df_sintomas <- df_sintomas[-4,]
#library(ggdark)
plot_newcases <- ggplot(df_sintomas, aes(x = data, y = casos)) +
geom_bar(stat="identity", color = "black", fill = "darkgoldenrod1", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Número de novos casos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos casos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(df_sintomas$casos)))
plot_newcases
jpeg(paste(path, "histograma_casos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newcases
dev.off()
head(df_obito)
obito_sintomas = as.data.frame(table(df_obito$data_dos_primeiros_sintomas))
names(obito_sintomas) = c("data", "obitos")
class(obito_sintomas$data)
obito_sintomas$data = as.character.factor(obito_sintomas$data)
obito_sintomas$data = as.Date(obito_sintomas$data, format = "%d/%m/%Y")
class(obito_sintomas$data)
plot_newdeaths <- ggplot(obito_sintomas, aes(x = data, y = obitos)) +
geom_bar(stat="identity", color = "black", fill = "darkblue", alpha = 0.9) +
theme_bw() +
theme(axis.text.x = element_text(angle = 90)) +
labs(title = "Novos óbitos COVID-19",
subtitle = "Pernambuco",
caption = paste("IRRD/PE. Fonte: Secretaria de Saúde de Pernambuco\n Dados atualizados em ", format(as.Date(today()), "%d/%m/%Y"))) +
xlab("Data do início dos sintomas") + ylab("Novos óbitos") +
scale_x_date(date_breaks = "5 days", date_labels = "%b %d",
limits = as.Date(c("2020-01-03", max(df_sintomas$data)))) +
scale_y_continuous(breaks = seq(0, max(obito_sintomas$data)))
plot_newdeaths
jpeg(paste(path, "histograma_obitos_sintomas.jpg", sep = ""),
width = 6, height = 5, units = 'in', res = 300)
plot_newdeaths
dev.off()
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), size = 2) +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
#df$Classificação.final <- factor()
municipio = as.data.frame(table(confirmados$municipio))
municipio$municipio = c(as.character(municipio$Var1))
# Classificação como fator
library(ggplot2)
#ggplot(df, aes(x = reorder(Freq, -Var1), y = Freq))
#ggplot(clasificacao, aes(x = Var1, y = Freq, fill = Var1))
plot_municipio = ggplot(municipio, aes(x = reorder(municipio, -Freq), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_text(aes(label = Freq), size = 3) +
ggtitle("Município de residência para os casos confirmados") +
xlab("") + ylab("Frequência")
plot_municipio + coord_flip() + theme(legend.position = "none")
jpeg(paste(path, "municipio_casos.jpg", sep = ""),
width = 7, height = 4, units = 'in', res = 300)
plot_municipio + coord_flip() + theme(legend.position = "none")
dev.off()
setwd("~/Documents/GitHub/covid-19_Pernambuco/predicoes")
library(reticulate) #para rodar códigos em Python
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
use_python('/opt/anaconda3/bin/python', required = TRUE)
#py_install("orca")
# Rodando
# Importante: mudar o diretório para onde se encontra o arquivo!
py_run_file("Fitting_curvature_.py")
# Carregando os csv's gerados
Casos_confirmados_Brazil_Fitting <- read_csv("Casos_confirmados_Brazil_Fitting.csv")
View(Casos_confirmados_Brazil_Fitting)
Casos_confirmados_Brazil_Fitting$Data =
as.Date.character(Casos_confirmados_Brazil_Fitting$Data, format = "%d %b")
class(Casos_confirmados_Brazil_Fitting$Data)
write.csv(Casos_confirmados_Brazil_Fitting,
"Casos_confirmados_Brazil_Fitting.csv")
Casos_confirmados_Pernambuco_Fitting <- read_csv("Casos_confirmados_Pernambuco_Fitting.csv")
View(Casos_confirmados_Pernambuco_Fitting)
Casos_confirmados_Pernambuco_Fitting$Data =
as.Date.character(Casos_confirmados_Pernambuco_Fitting$Data, format = "%d %b")
class(Casos_confirmados_Pernambuco_Fitting$Data)
write.csv(Casos_confirmados_Pernambuco_Fitting,
"Casos_confirmados_Pernambuco_Fitting.csv")
setwd("~/Documents/GitHub/covid-19_Pernambuco/curvatura_ricci")
library(reticulate) #para rodar códigos em Python
library(readr)
library(ggplot2)
library(tidyr)
library(dplyr)
library(plotly)
# Local da versão do Python a ser utilizada
use_python('/opt/anaconda3/bin/python', required = TRUE)
py_run_file("Ricci.py")
# Carregando os csv's gerados
ricci_mundo <- read_csv("forman_ricci_mundial.csv")
ricci_brasil <- read_csv("forman_ricci_brasil.csv")
View(ricci_brasil)
### Mudando o formato das datas
ricci_brasil$periodo = as.Date(ricci_brasil$periodo, format = "%d %b")
class(ricci_brasil$periodo)
write.csv(ricci_brasil, "forman_ricci_brasil.csv")
ricci_mundo$periodo = as.Date(ricci_mundo$periodo, format = "%d %b")
class(ricci_mundo$periodo)
write.csv(ricci_mundo, "forman_ricci_mundial.csv")
